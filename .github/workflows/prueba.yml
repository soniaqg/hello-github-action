# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: 'main'

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          pwd
          ls 
          dia=lunes
          echo "dia: $dia"
          echo "dia=${dia}" >> $GITHUB_ENV
        
      # Runs a set of commands using the runners shell
      - name: Run an action programmed
        id: a
        uses: ./actions/actionsonia
        with:
          nombre: Sonia

      - name: Run an action with an output
        uses: ./actions/actiondespedida
        with: 
          nombre: ${{ steps.a.outputs.nombre }}

      - name: Get dia value
        run: |
          echo "el dia de la semana es: ${{ env.dia }}"

      - name: Make changes to PR
        run: |
          git config --global user.name $GITHUB_ACTOR
          git pull
          git branch prueba-PR1 || true
          git checkout prueba-PR1
          # git pull -f --rebase origin prueba-PR1 || true
          git pull -f -r || true
          fecha=$(date +%s)
          echo "Soy Sonia. Hoy es: $fecha" >> "hola_$fecha.txt" 
          git add hola.txt
          git commit -m "commit automatizado desde el workflow"
          git pull -f -r origin prueba-PR1 || true
          git branch -r 
          if [ $(git branch -r | grep "prueba-PR1" | wc -l) -eq 0 ]
          then
            echo "Branch no existe. Upstream"
            git push --set-upstream origin prueba-PR1
          else
            echo "Existe branch"
            # git push 
            git push --set-upstream origin prueba-PR1
          fi
       
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v3.5.1
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          title: 'Prueba creaci√≥n PR terceros'
          commit-message: Update file hola
          branch: prueba-PR1
          base: main
          delete-branch: false

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.create_pr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.create_pr.outputs.pull-request-url }}"